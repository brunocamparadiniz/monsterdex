{"ast":null,"code":"var _jsxFileName = \"/Users/brunocamparadiniz/Desktop/coding/ZTM-REACT/projects/monsters/src/App.js\";\nimport { Component } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  }\n  // didMount is the first time a component gets placed into the DOM (first time REACT renders a component into the page) -> it only happens once!\n  // this is the moment when you wanna make the API request \n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: e => {\n          const searchString = e.target.value.toLocaleLowerCase();\n          const filteredMonsters = this.state.monsters.filter(monster => {\n            monster.name.includes(e.target.value);\n          });\n          this.setState(() => {\n            return {\n              monsters: filteredMonsters\n            };\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), this.state.monsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","setState","render","e","searchString","target","value","toLocaleLowerCase","filteredMonsters","filter","monster","name","includes","map","id"],"sources":["/Users/brunocamparadiniz/Desktop/coding/ZTM-REACT/projects/monsters/src/App.js"],"sourcesContent":["import { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n    };\n  }\n// didMount is the first time a component gets placed into the DOM (first time REACT renders a component into the page) -> it only happens once!\n// this is the moment when you wanna make the API request \n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState(() => {\n        return {monsters: users}\n      }))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <input \n          className=\"search-box\" \n          type=\"search\" \n          placeholder=\"search monsters\" \n          onChange= {(e) => {\n            const searchString = e.target.value.toLocaleLowerCase()\n            const filteredMonsters = this.state.monsters.filter((monster) => {\n              monster.name.includes(e.target.value)\n            })\n            this.setState(() => {\n              return {monsters: filteredMonsters}\n            })\n          }}\n        />\n          \n        {this.state.monsters.map((monster) => {\n          return (\n            <div key={monster.id}>\n              <h1>{monster.name}</h1>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAAC;AAEnB,MAAMC,GAAG,SAASD,SAAS,CAAC;EAC1BE,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE;IACZ,CAAC;EACH;EACF;EACA;EACEC,iBAAiB,GAAG;IAClBC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,KAAK,IAAK,IAAI,CAACC,QAAQ,CAAC,MAAM;MACnC,OAAO;QAACP,QAAQ,EAAEM;MAAK,CAAC;IAC1B,CAAC,CAAC,CAAC;EACP;EAEAE,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB;QACE,SAAS,EAAC,YAAY;QACtB,IAAI,EAAC,QAAQ;QACb,WAAW,EAAC,iBAAiB;QAC7B,QAAQ,EAAIC,CAAC,IAAK;UAChB,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAACC,iBAAiB,EAAE;UACvD,MAAMC,gBAAgB,GAAG,IAAI,CAACf,KAAK,CAACC,QAAQ,CAACe,MAAM,CAAEC,OAAO,IAAK;YAC/DA,OAAO,CAACC,IAAI,CAACC,QAAQ,CAACT,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;UACvC,CAAC,CAAC;UACF,IAAI,CAACL,QAAQ,CAAC,MAAM;YAClB,OAAO;cAACP,QAAQ,EAAEc;YAAgB,CAAC;UACrC,CAAC,CAAC;QACJ;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,EAED,IAAI,CAACf,KAAK,CAACC,QAAQ,CAACmB,GAAG,CAAEH,OAAO,IAAK;QACpC,oBACE;UAAA,uBACE;YAAA,UAAKA,OAAO,CAACC;UAAI;YAAA;YAAA;YAAA;UAAA;QAAM,GADfD,OAAO,CAACI,EAAE;UAAA;UAAA;UAAA;QAAA,QAEd;MAEV,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAEV;AACF;AAEA,eAAevB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}